AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Simple Addition Lambda Function with API Gateway

Parameters:
  Environment:
    Type: String
    
  ResourcePrefix:
    Type: String
    
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.9
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        LOG_LEVEL: INFO
  
Resources:
  # Lambda Function
  AdditionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Environment}-addition-function'
      CodeUri: src/
      Handler: add.lambda_handler
      Timeout: 480
      Role: !GetAtt LambdaExecutionRole.Arn
      Tags:
        Environment: !Ref Environment
        Application: !Ref ResourcePrefix
            
  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub dev
      Cors: "'*'"
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        swagger: "2.0"
        info:
          title: !Sub ${Environment}-backend-api
        produces:
          - application/json
          - application/javascript
          - text/html; charset=utf-8
          - text/css
        paths:
          /usercreate:
            post:
              summary: User Signup API
              description: User Signup API
              produces:
                - application/json
              responses: {}
              security:
                - api_key: []
                # - Cognito_Auth: []
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AdditionFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                type: "aws_proxy"
            options:
              consumes:
                - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                passthroughBehavior: "when_no_match"
                type: "mock"